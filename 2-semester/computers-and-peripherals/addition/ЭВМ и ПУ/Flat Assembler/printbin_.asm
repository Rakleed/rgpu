; (c) xrnd [2010] [http://asmworld.ru/]
; printbin.asm - вывод чисел в двоичном виде

use16			    ;Генерировать 16-битный код
org 100h		    ;Программа начинается с адреса 100h

    mov ax,1234h	    ;Число, которое будем выводить (1234h)
    mov cx,print_str	    ;Адрес процедуры print_str
    mov bx,print_endline    ;Адрес процедуры print_endline

    mov di,s_byte
    call cx		    ;Вывод строки 'byte:'
    call print_byte_bin     ;Вывод AL в двоичном виде
    call bx		    ;Вывод конца строки
    mov di,s_word
    call cx		    ;Вывод строки 'word:'
    call print_word_bin     ;Вывод AX в двоичном виде
    call bx		    ;Вывод конца строки

    mov di,s_pak
    call cx		    ;Вывод строки 'Press any key...'
    mov ah,8		    ;Функция DOS 08h - ввод символа без эха
    int 21h

    mov ax,4C00h	    ;\
    int 21h		    ;/ Завершение программы

;----------------------------------------------------------------------
;Процедура вывода байта на консоль в двоичном виде
; AL - байт
print_byte_bin:
    push di
    mov di,buffer	    ;DI = адрес буфера
    call byte_to_bin_str    ;Преобразование байта в AL в строку
    mov byte[di],'$'	    ;Добавление символа конца строки
    sub di,8		    ;DI = адрес начала строки
    call print_str	    ;Вывод строки на консоль
    pop di
    ret

;----------------------------------------------------------------------
;Процедура вывода слова на консоль в двоичном виде
; AX - слово
print_word_bin:
    push di
    mov di,buffer	    ;DI = адрес буфера
    call word_to_bin_str    ;Преобразование слова в AX в строку
    mov byte[di],'$'	    ;Добавление символа конца строки
    sub di,16		    ;DI = адрес начала строки
    call print_str	    ;Вывод строки на консоль
    pop di
    ret

;----------------------------------------------------------------------
;Процедура вывода строки на консоль
; DI - адрес строки
print_str:
    push ax
    mov ah,9		    ;Функция DOS 09h - вывод строки
    xchg dx,di		    ;Обмен значениями DX и DI
    int 21h		    ;Обращение к функции DOS
    xchg dx,di		    ;Обмен значениями DX и DI
    pop ax
    ret

;----------------------------------------------------------------------
;Процедура вывода конца строки (CR+LF)
print_endline:
    push di
    mov di,endline	    ;DI = адрес строки с символами CR,LF
    call print_str	    ;Вывод строки на консоль
    pop di
    ret

;----------------------------------------------------------------------
;Процедура преобразования байта в строку в двоичном виде
; AL - байт.
; DI - буфер для строки (8 символов). Значение регистра не сохраняется.
byte_to_bin_str:
    push cx		    ;Сохранение CX
    mov cx,8		    ;Счётчик цикла

btbs_lp:
    rol al,1		    ;Циклический сдвиг AL влево на 1 бит
    jc btbs_1		    ;Если выдвинутый бит = 1, то переход
    mov byte[di],'0'	    ;Добавление символа '0' в строку
    jmp btbs_end
btbs_1:
    mov byte[di],'1'	    ;Добавление символа '1' в строку
btbs_end:
    inc di		    ;Инкремент DI
    loop btbs_lp	    ;Команда цикла

    pop cx		    ;Восстановление CX
    ret 		    ;Возврат из процедуры

;----------------------------------------------------------------------
;Процедура преобразования слова в строку в двоичном виде
; AX - слово
; DI - буфер для строки (16 символов). Значение регистра не сохраняется.
word_to_bin_str:
    xchg ah,al		    ;Обмен AH и AL
    call byte_to_bin_str    ;Преобразование старшего байта в строку
    xchg ah,al		    ;Обмен AH и AL
    call byte_to_bin_str    ;Преобразование младшего байта в строку
    ret

;---------------------------------------------------------------------
; Данные
s_byte	db 'byte: $'
s_word	db 'word: $'
s_pak	db 'Press any key...$'
endline db 13,10,'$'
buffer	rb 17
